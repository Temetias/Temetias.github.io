(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{16:function(e,t,n){"use strict";var a=n(18),o=n.n(a),i=n(26),s=n.n(i);const r=["---\r\ntitle: Managing Event Handlers In Classes\r\nslug: managing-event-handlers-in-classes\r\ndate: 2020-07-12\r\nauthor: Teemu Karppinen\r\nauthorImg: /me2.jpg\r\nauthorLink: https://teemukarppinen.dev\r\n---\r\n\r\nIf you've worked with TypeScript you might've noticed that many of library authors have a weird obsession of writing libraries as classes. Or even worse, write class wrappers around already nice, clean, functional API's just for the sake of that \"being the TypeScript way of doing things\". Don't get me wrong: I'm not saying the libraries are necessarily bad or shouldn't be used. There is just some painpoints that pop up with the OOP approach. Especially when we're talking about an event-driven language like JavaScript.\r\n\r\n## The Problem 😬\r\n\r\nLately I've been working on a feature which needs A LOT of event handlers. I'm not going into specifics because it's work stuff, but essentially I have to:\r\n\r\n- Create a lot of class instances\r\n- Attach methods of those class instances to different events\r\n- Handle the detaching of those events in the end of the class instances' lifecycle\r\n\r\nThe class instances are [vue-class-components](https://class-component.vuejs.org/), but that's trivial to the actual problem. Just any class API where we might need to attach and detach methods to events applies here. The problem arises when you want to attach and detach class methods while retaining the correct ```this``` context.\r\n\r\nLet's think about this scenario:\r\n\r\nYou have some library with events, for example some sort of map library. You want to attach a method of the class to the event, and detach it later. Easy, right?\r\n\r\n![alt text](/badbind.PNG \"This will lose THIS\")\r\n\r\nYou wish! You see, this approach will make the ```mouseDownHandler``` lose ```this``` context, and be unable to refer to the value it wants to. So in this case, the ```console.log``` doesn't print ```\"Hey\"``` but instead we get greeted with the good ol' ```undefined```.\r\n\r\n## The Ugly Solution 🤮\r\n\r\nOkay then, let's bind the function. But then that needs to happen inside the lifecycle. And don't forget, we want to refer that bound function later to detach it! So we can't just go ```map.mouseDown.on(this.mouseDownHandler.bind(this))``` because [Function.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind) creates a new function and that's the function we want to be .offing later.\r\n\r\nSo what we need to do is to have a separate variable for the function and alter that one. Something like this:\r\n\r\n![alt text](/uglybind.PNG \"Works, but is ugly\")\r\n\r\nThis works but as you can see it's not the most readable approach and gets very boilerplatey fast. And you also need to come up with a new name for the unbound funtion. I've seen some use underscore prefixes like ```_handleMouseDown``` but that already is kind of reserved for indicating the intentional hiding of implementation details.\r\n\r\nAlso, as we can see, this doesn't scale that nicely...\r\n![alt text](/ugliestbind.PNG \"Works, but there is soo much code\")\r\n\r\n## The (less) Ugly Solutions 😪\r\n\r\nWell, the other day it kind of hit me. Instead of focusing too much on the methods, renaming, binding and all that mess, what if we just used some sort of \"cleanup callback array\"? I tried it and in my opinion this is the least ugly solution to this problem.\r\n\r\nCheck this out:\r\n![alt text](/prettybind.PNG \"Works, and is much cleaner to look at\")\r\n\r\nWe introduce a new array ```cleanUps``` and we do all the bind, .on and .off handling in the mounted hook. The overall lines of code doesn't really change but that's not the point. In my opinion there is still benefits with this approach:\r\n\r\n- Less weird name suffixes like ```Unbound```\r\n- The logic is in one place\r\n- More flexible approach. The cleanUps can be used for other things and from other methods.\r\n\r\nYou could also consider implementing a utility function if you find yourself doind a lot of attaching. Something like this:\r\n![alt text](/fancybind.PNG \"Everything is nicer when you use a function\")\r\n\r\nUtility functions... Can't have enough of those, right? 😅\r\n\r\n## To Close Things Up \r\n\r\nWhat I showed here is not necessarily the golden solution you were looking for. But it is, in my opinion, a decent workaround to an annoying problem. Overall, all this would've been avoided by not using class based API in the first place and avoiding the use of ```this``` altogether. But we don't always have the benefit of choosing the libraries we work with. It's situations like these, when workarounds like this are valuable.\r\n\r\n","---\r\ntitle: The New Website\r\nslug: new-website\r\ndate: 2020-06-24\r\nauthor: Teemu Karppinen\r\nauthorImg: /me2.jpg\r\nauthorLink: https://teemukarppinen.dev\r\n---\r\n\r\nDuring my summer holidays I finally decided to improve my personal website. I had a site already but it was made back when I was just starting in webdev and, well, it shows.\r\n\r\nThe old site lacked quite a lot not only in the responsiviness department, but also in accessibility. There's barely any semantic on it and the load times overall are not really great for a page with no images, no real need for javascript and so on.\r\n\r\n*My old website... Yes that line between the div and svg was actually visible.*😅\r\n![alt text](/old-website.PNG \"My old Nuxt.js website\")\r\n\r\n## Tech Choices 🔨\r\n\r\nThe old site was made with [Nuxt.js](https://nuxtjs.org/). Looking back, that site could've (and should've) been just a static HTML page. Inspired by the idea of just going raw HTML, that's what I initially started with.\r\n\r\nThe further I got, the more tedious that approach became. I had already decided that I would do a multi-page site and also wanted to implement this blog. The lack of style scoping and the lack of component reuseability quickly became a burden.\r\n\r\nSo I started spinning the wheel of frameworks once again! This time I wanted something more minimal though. I found [Sapper](https://sapper.svelte.dev/) which seemed way more appealing for this usecase than the alternatives:\r\n\r\n- It's super lightweight \r\n- It's easy to get started\r\n- Svelte as a framework has close to zero boilerplate\r\n\r\nDon't get me wrong: I have nothing against Nuxt.js, Next.js, Gatsby and so on. I think they're great but for this kind of lightweight website+blog\r\nproject, sapper seemed like it had the best toolkit. Although [Gatsby](https://www.gatsbyjs.org/) with [gatsby-image](https://www.gatsbyjs.org/packages/gatsby-image/) was super tempting, doing an almost fully static page with React or Vue just seemed like a bit of an overkill.\r\n\r\nWorking with Svelte and Sapper was super nice. The initial boilerplate they give you has an amazing focus on semantic and accessibility, the dev server is super fast and overall the best parts of the framework shine in a usecase like this.\r\n\r\n## Visual Progress 💅\r\n\r\nI decided to go for a minimal look in the hopes of rapid development and small bundle sizes. Overall I think the design turned out nice enough. The only \"gimmick\" I made was the landing figure styling. I wanted to sprinkle in a little bit of that [skeuomorphic design](https://uxstudioteam.com/ux-blog/ui-trends-2019/#10Skeuomorphic_design) double shadow goodness.\r\n\r\nTo achieve the nice effect of having a light source on the top left you need to cast a shadow on the bottom right and make a white shadow on the opposite side. To make the white appear at all I needed the background to be a bit darker. Also, I quickly realized that having just a solid red border completely wrecks the whole illusion.\r\n\r\n*Not good, the red border is way too strong* 🤮\r\n![alt-text](/figure-bad.PNG \"Red border ruins the illusion\")\r\n\r\nTo achieve the wanted effect, the border needed a gradient. Well, that isn't really a thing so I ended up doing a ball shape behind the image and placing the image on top of it. The tricky part was to make them properly responsive. Luckily, responsive square and circle shapes are easy enough to achieve with the ol' `padding-bottom: 100%;` trick. Some absolute positioning on the image, and voilà!\r\n\r\n*The circle shape for the gradient*\r\n![alt-text](/figure-bg.PNG \"The circle shape for the gradient\")\r\n\r\n*Final result, looking good!* 🎉\r\n![alt-text](/figure.PNG \"Final result\")\r\n\r\nHaving wrestled with that problem for longer than I want to admit, I decided that this was it for the gimmicks. Rest of the design is kind of self-explanatory: Black on white, some red highlights and that's it.\r\n\r\n## The Blog 📰\r\n\r\nImplementing the blog was the only real technical problem I had to solve. Blogs are a thing that have been solved like a million times already, but hey, we're all out here learning. I wanted to solve this at least mostly by myself.\r\n\r\nI decided to go with markdown, so I could easily write blog posts and just drop them in the repo with Github. This initial version uses similar approach that the Sapper template already came with. The `_posts.js` file bundles the .md files together and we use the `[slug].svelte` file to dynamically populate it with a plog post.\r\n\r\nThe images I serve from Sappers static folder, but there's also the option to just link them from a 3rd party site.\r\n\r\nThe pain point currently is the bundling of the markdown files:\r\n\r\n*Bundling the markdown*\r\n![alt-text](/bundling.PNG \"Bundling the markdown files\")\r\n\r\nAs you can see, all new blogposts currently require a new entry on the file. I tried experimenting with having the metadata in the .md itself and using the [marked-metadata](https://github.com/jaydson/marked-metadata) library instead of just [marked](https://github.com/markedjs/marked) on webpack level. That part worked fine, but the issue I had was with collecting the markdown. I tried importing all the files from the folder, something like `import posts from \"../blog_content/*.md\"` but for some reason I couldn't get the [webpack-glob-entry](https://www.npmjs.com/package/webpack-glob-entry) to play nicely at all.\r\n\r\nIn the end I decided to ditch the wildcard import and webpack level .md parsing, and do it on the bundling part. This allowed me some more freedom with parsing the posts and getting some additional data from them. For example, I can now determine the estimated read time for the post! The end result is still far from perfect, but at least now the metadata comes from the .md file, and there is only two lines to add to `_posts.js` when adding new posts.\r\n\r\n*Bundling the markdown but with less manual labor*\r\n![alt-text](/bundling-better.PNG \"Bundling the markdown files\")\r\n\r\nIn the hopes of actually finishing the site during my holiday, I left the blog post part as is for now. But I'm most certainly coming back to the subject. Expect a new blog post soon!\r\n\r\n## Deploying 🚀\r\n\r\nGithub pages was a obvious choice here. There are some tempting alternatives, but I already had my github pages setup and my custom domain was already setup nicely with it. Github pages is also available with a great price of free!\r\n\r\nI'm planning to do some sort of fancier integration, maybe utilizing [Github actions](https://github.com/features/actions) but before I sorted how I want to proceed with the blog I didn't want to commit to a solution. It would suck to implement a fancy deployment pipeline, maybe even costing some money just to end up scrapping it.\r\n\r\nI did, however, make a [super ghetto deployment script](https://github.com/Temetias/homepage-2020/blob/master/deploy.sh) which I hooked up with npm so I can just use `npm run deploy` to push all my changes live. It's not the fanciest thing ever, but hey, it works. With this setup I might actually be able to keep myself updating the website every now and then!\r\n"].map((function(e){const{data:t,content:n}=o()(e);return{...t,content:s()(n),readTime:(a=n,Math.round(a.split(" ").length/256))};var a}));t.a=r},17:function(e,t,n){"use strict";var a=n(0);function o(e){return e.author||"Teemu Karppinen"}function i(e){return e.authorImg||"/me2.jpg"}function s(e){return e.authorLink||"/"}function r(e){let t,n,r,l,c,h,d,b,u,m,p,g,j,f,w,y,v,O,k,I,T,x=o(e[0])+"",N=new Date(e[0].date).toLocaleDateString()+"",q=e[0].readTime+"";return{c(){t=Object(a.q)("header"),n=Object(a.q)("div"),r=Object(a.q)("img"),h=Object(a.K)(),d=Object(a.q)("div"),b=Object(a.q)("a"),u=Object(a.N)(x),p=Object(a.K)(),g=Object(a.q)("span"),j=Object(a.q)("span"),f=Object(a.N)(N),w=Object(a.K)(),y=Object(a.q)("span"),v=Object(a.N)("•"),O=Object(a.K)(),k=Object(a.q)("span"),I=Object(a.N)(q),T=Object(a.N)(" min read"),this.h()},l(e){t=Object(a.i)(e,"HEADER",{class:!0});var o=Object(a.g)(t);n=Object(a.i)(o,"DIV",{class:!0});var i=Object(a.g)(n);r=Object(a.i)(i,"IMG",{src:!0,alt:!0,class:!0}),h=Object(a.j)(i),d=Object(a.i)(i,"DIV",{class:!0});var s=Object(a.g)(d);b=Object(a.i)(s,"A",{href:!0,class:!0});var l=Object(a.g)(b);u=Object(a.k)(l,x),l.forEach(a.p),p=Object(a.j)(s),g=Object(a.i)(s,"SPAN",{class:!0});var c=Object(a.g)(g);j=Object(a.i)(c,"SPAN",{class:!0});var m=Object(a.g)(j);f=Object(a.k)(m,N),m.forEach(a.p),w=Object(a.j)(c),y=Object(a.i)(c,"SPAN",{class:!0});var S=Object(a.g)(y);v=Object(a.k)(S,"•"),S.forEach(a.p),O=Object(a.j)(c),k=Object(a.i)(c,"SPAN",{class:!0});var E=Object(a.g)(k);I=Object(a.k)(E,q),T=Object(a.k)(E," min read"),E.forEach(a.p),c.forEach(a.p),s.forEach(a.p),i.forEach(a.p),o.forEach(a.p),this.h()},h(){r.src!==(l=i(e[0]))&&Object(a.e)(r,"src",l),Object(a.e)(r,"alt",c=o(e[0])),Object(a.e)(r,"class","svelte-1jdubmn"),Object(a.e)(b,"href",m=s(e[0])),Object(a.e)(b,"class","svelte-1jdubmn"),Object(a.e)(j,"class","divider svelte-1jdubmn"),Object(a.e)(y,"class","divider-dot svelte-1jdubmn"),Object(a.e)(k,"class","divider svelte-1jdubmn"),Object(a.e)(g,"class","svelte-1jdubmn"),Object(a.e)(d,"class","post-info-inner svelte-1jdubmn"),Object(a.e)(n,"class","post-info svelte-1jdubmn"),Object(a.e)(t,"class","svelte-1jdubmn")},m(e,o){Object(a.z)(e,t,o),Object(a.c)(t,n),Object(a.c)(n,r),Object(a.c)(n,h),Object(a.c)(n,d),Object(a.c)(d,b),Object(a.c)(b,u),Object(a.c)(d,p),Object(a.c)(d,g),Object(a.c)(g,j),Object(a.c)(j,f),Object(a.c)(g,w),Object(a.c)(g,y),Object(a.c)(y,v),Object(a.c)(g,O),Object(a.c)(g,k),Object(a.c)(k,I),Object(a.c)(k,T)},p(e,[t]){1&t&&r.src!==(l=i(e[0]))&&Object(a.e)(r,"src",l),1&t&&c!==(c=o(e[0]))&&Object(a.e)(r,"alt",c),1&t&&x!==(x=o(e[0])+"")&&Object(a.J)(u,x),1&t&&m!==(m=s(e[0]))&&Object(a.e)(b,"href",m),1&t&&N!==(N=new Date(e[0].date).toLocaleDateString()+"")&&Object(a.J)(f,N),1&t&&q!==(q=e[0].readTime+"")&&Object(a.J)(I,q)},i:a.D,o:a.D,d(e){e&&Object(a.p)(t)}}}function l(e,t,n){let{post:a}=t;return e.$set=e=>{"post"in e&&n(0,a=e.post)},[a]}class c extends a.a{constructor(e){var t;super(),document.getElementById("svelte-1jdubmn-style")||((t=Object(a.q)("style")).id="svelte-1jdubmn-style",t.textContent="header.svelte-1jdubmn.svelte-1jdubmn{margin-bottom:1em}a.svelte-1jdubmn.svelte-1jdubmn{font-weight:600}span.svelte-1jdubmn.svelte-1jdubmn{color:rgba(0, 0, 0, 0.6)}.post-info.svelte-1jdubmn.svelte-1jdubmn{display:flex}.post-info.svelte-1jdubmn img.svelte-1jdubmn{margin:0;border:1px solid white;border-radius:50%;width:4em;height:4em}.post-info-inner.svelte-1jdubmn.svelte-1jdubmn{margin-left:1em}.post-info-inner.svelte-1jdubmn span.svelte-1jdubmn{display:block}.divider.svelte-1jdubmn.svelte-1jdubmn,.divider-dot.svelte-1jdubmn.svelte-1jdubmn{display:inline !important}@media(max-width: 480px){.divider.svelte-1jdubmn.svelte-1jdubmn{display:block !important}.divider-dot.svelte-1jdubmn.svelte-1jdubmn{display:none !important;color:red}}",Object(a.c)(document.head,t)),Object(a.y)(this,e,l,r,a.H,{post:0})}}t.a=c},19:function(e,t){},61:function(e,t,n){"use strict";n.r(t),n.d(t,"preload",(function(){return r}));var a=n(0),o=n(16),i=n(17);function s(e){let t,n,o,s,r,c,h,d,b,u,m,p,g,j,f,w,y,v=e[0].title+"",O=e[0].content+"";return document.title=t=e[0].title,h=new i.a({props:{post:e[0]}}),{c(){n=Object(a.K)(),o=Object(a.q)("h1"),s=Object(a.N)(v),c=Object(a.K)(),Object(a.l)(h.$$.fragment),d=Object(a.K)(),b=Object(a.q)("div"),u=Object(a.K)(),m=Object(a.q)("div"),p=Object(a.q)("span"),g=Object(a.N)("Hey! If you're looking for a comment section I'm sorry to disappoint you: I\r\n    haven't had time to make one yet. 🤐 But if you wanna call me out on my\r\n    bull💩, just ping me\r\n    "),j=Object(a.q)("a"),f=Object(a.N)("@Twitter"),w=Object(a.N)("\r\n    meanwhile!"),this.h()},l(e){Object(a.F)('[data-svelte="svelte-iu3vwn"]',document.head).forEach(a.p),n=Object(a.j)(e),o=Object(a.i)(e,"H1",{id:!0,class:!0});var t=Object(a.g)(o);s=Object(a.k)(t,v),t.forEach(a.p),c=Object(a.j)(e),Object(a.h)(h.$$.fragment,e),d=Object(a.j)(e),b=Object(a.i)(e,"DIV",{class:!0}),Object(a.g)(b).forEach(a.p),u=Object(a.j)(e),m=Object(a.i)(e,"DIV",{class:!0});var i=Object(a.g)(m);p=Object(a.i)(i,"SPAN",{});var r=Object(a.g)(p);g=Object(a.k)(r,"Hey! If you're looking for a comment section I'm sorry to disappoint you: I\r\n    haven't had time to make one yet. 🤐 But if you wanna call me out on my\r\n    bull💩, just ping me\r\n    "),j=Object(a.i)(r,"A",{href:!0});var l=Object(a.g)(j);f=Object(a.k)(l,"@Twitter"),l.forEach(a.p),w=Object(a.k)(r,"\r\n    meanwhile!"),r.forEach(a.p),i.forEach(a.p),this.h()},h(){Object(a.e)(o,"id",r=l(e[0].title)),Object(a.e)(o,"class","svelte-1r59cqt"),Object(a.e)(b,"class","content svelte-1r59cqt"),Object(a.e)(j,"href","https://twitter.com/Temetias"),Object(a.e)(m,"class","blog-disclaimer svelte-1r59cqt")},m(e,t){Object(a.z)(e,n,t),Object(a.z)(e,o,t),Object(a.c)(o,s),Object(a.z)(e,c,t),Object(a.C)(h,e,t),Object(a.z)(e,d,t),Object(a.z)(e,b,t),b.innerHTML=O,Object(a.z)(e,u,t),Object(a.z)(e,m,t),Object(a.c)(m,p),Object(a.c)(p,g),Object(a.c)(p,j),Object(a.c)(j,f),Object(a.c)(p,w),y=!0},p(e,[n]){(!y||1&n)&&t!==(t=e[0].title)&&(document.title=t),(!y||1&n)&&v!==(v=e[0].title+"")&&Object(a.J)(s,v),(!y||1&n&&r!==(r=l(e[0].title)))&&Object(a.e)(o,"id",r);const i={};1&n&&(i.post=e[0]),h.$set(i),(!y||1&n)&&O!==(O=e[0].content+"")&&(b.innerHTML=O)},i(e){y||(Object(a.O)(h.$$.fragment,e),y=!0)},o(e){Object(a.P)(h.$$.fragment,e),y=!1},d(e){e&&Object(a.p)(n),e&&Object(a.p)(o),e&&Object(a.p)(c),Object(a.n)(h,e),e&&Object(a.p)(d),e&&Object(a.p)(b),e&&Object(a.p)(u),e&&Object(a.p)(m)}}}async function r({params:e}){const t=o.a.filter(t=>t.slug===e.slug)[0];if(t)return{post:t};this.error(404,"Not found")}function l(e){return e.toLowerCase().split(" ").join("-")}function c(e,t,n){let{post:a}=t;return e.$set=e=>{"post"in e&&n(0,a=e.post)},[a]}class h extends a.a{constructor(e){var t;super(),document.getElementById("svelte-1r59cqt-style")||((t=Object(a.q)("style")).id="svelte-1r59cqt-style",t.textContent="h1.svelte-1r59cqt{margin-bottom:1em}.content.svelte-1r59cqt{margin:2em 0}.blog-disclaimer.svelte-1r59cqt{display:block;border-bottom:1px solid rgba(0, 0, 0, 0.12);border-top:1px solid rgba(0, 0, 0, 0.12);padding:2em 0;margin-top:5em;font-weight:600}",Object(a.c)(document.head,t)),Object(a.y)(this,e,c,s,a.H,{post:0})}}t.default=h}}]);